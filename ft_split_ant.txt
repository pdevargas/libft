/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: pde-varg <pde-varg@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/10/07 21:54:48 by pdv               #+#    #+#             */
/*   Updated: 2024/10/15 18:43:13 by pde-varg         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

static int	ft_separador(const char *src, char car)
{
	int			punt;
	const char	*o;

	punt = 0;
	o = src;
	if (!src)
		return (-1);
	while (punt <= ft_strlen(o) && o[punt] != '\0')
	{
		if (o[punt] == car)
		{
			return (punt);
		}
		punt++;
	}
	return (-1);
}

static int	ft_cuenta(const char *cadena, char caracter)
{
	int	x;
	int	cont;

	cont = 0;
	x = 0;
	while (cadena[x] != '\0')
	{
		if (cadena[x] == caracter)
			cont++;
		x++;
	}
	return (cont);
}

char	**ft_split(char const *s, char c)
{
	int			x;
	int			pos;
	const char	*temp;
	const char	**dest;

	pos = 0;
	x = 0;
	temp = s;
	dest = (const char **)malloc((ft_cuenta(s, c) + 1) * sizeof(char *));
	if (!dest)
		return (NULL);
	while (temp && x <= ft_cuenta(s, c))
	{
		pos = ft_separador(temp, c);
		if (pos == -1)
			dest[x] = temp;
		else
		{
			dest[x] = ft_substr(temp, 0, (size_t)pos);
			temp = ft_substr(temp, (unsigned int)(pos + 1), ft_strlen(s));
		}
		x++;
	}
	dest[x] = NULL;
	return ((char **)dest);
}

int	main(void)
{
	int x;
	char const s1[30] = "HolaXPepepeXPerezXXsigue";
	char c = 'X';
	char **d;

	//dest[x] = (char *)ft_calloc(ft_strlen(cad), sizeof(char));
	x = 0;
	d = ft_split(s1, c);
	printf("----------------- \n");
	while (x <= ft_cuenta(s1, c) + 1)
	{
		printf("cadena %s \n", d[x]);
		x++;
	}
	return (0);
}